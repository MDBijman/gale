main: Program(fns) ->
     funstrs := !concat_str !intersperse["\n"] !flatmap_some[!print] fns
  in funstrs;

print: Function(name, params, body) ->
     paramstr := !concat_str !flatmap_some[!print] params
  in bodystr  := body
  > !print
  in !concat_str !flatten_some [
      "def ", name, " [", paramstr, "]\n",
      bodystr, "\n"
    ];

print: Vars(i) -> !concat_str ["vars:", !to_str i];

print: Call(fn, arg)     -> !concat_str ["call ", fn, " (", !print arg, ")"];
print: Var(i)            -> !concat_str ["$", !to_str i, ""];
print: Store(into, expr) -> !concat_str [!print into, " = ", !print expr];
print: Load(from)        -> !print from;
print: Return(e)         -> !concat_str ["ret ", !print e] ;
print: [h|t]             -> !concat_str !flatten_some !intersperse["\n"] !flatmap_some[!print] [h|t];
print: Array(elems) ->
  !concat_str !flatten_some ["[", !intersperse[", "] !map[!print] elems, "]"];
print: UI8(i) -> !to_str i;
print: BinOp(symbol, lhs, rhs) -> !concat_str [!print lhs, " ", !print rhs, " ", symbol ];
