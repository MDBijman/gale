mod fib

.const
0: &str " "
.code
fn fib ($0: ui64) -> ui64
        ui32 $1, 2
        lt $1, $0, $1
        jmpifn $1 @lbl_1
        ui32 $1, 1
        ret $1
lbl_1:  ui32 $1, 1
        sub $2, $0, $1
        call $3, @fib ($2)
        ui32 $1, 2
        sub $2, $0, $1
        call $4, @fib ($2)
        add $1, $3, $4
        ret $1
endfn

fn main ($0: &[&str]) -> ui64
        ui32 $1, 0
        idx $2, $0, $1, &str
        call $3, @std:parse_ui64 ($2)
        loadc $9, 0
        ui32 $4, 0
lbl_1:  eq $5, $4, $3
        jmpif $5 @lbl_2
        call $8, @fib ($4)
        call $7, @std:print_ui64 ($8)
        call $7, @std:print_str ($9)
        call $7, @std:flush ($9)
        ui32 $6, 1
        add $4, $4, $6
        jmp @lbl_1
lbl_2:  ret $8
endfn